name: Deploy UI to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: imt-repository-ui           # set this to your Amazon ECR repository name
  ECS_SERVICE: ui                 # set this to your Amazon ECS service name
  ECS_CLUSTER: imt5                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition-ui.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: users-ui           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./dashboard-ui
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Restart Containers
        id: deploy-image
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: data.xapik.org
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            cd ~/app
            aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 506064558446.dkr.ecr.eu-north-1.amazonaws.com
            docker compose pull
            docker compose up -d 
